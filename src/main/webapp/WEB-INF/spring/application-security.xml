<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:configurator="http://cocoon.apache.org/schema/configurator"
             xsi:schemaLocation="http://www.springframework.org/schema/beans

http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.1.xsd http://cocoon.apache.org/schema/configurator http://cocoon.apache.org/schema/configurator/cocoon-configurator-1.0.xsd">


    <!--<global-method-security pre-post-annotations="enabled">-->
        <!--<expression-handler ref = "methodSecurityExpressionHandler" />-->
        <!--<protect-pointcut expression="execution(* ru.strela.ems.core.service.spring.*ServiceImpl.*(..))" access="ROLE_USER"/>-->
    <!--</global-method-security>-->

    <!--<global-method-security secured-annotations="enabled">
    </global-method-security>
-->
    <!--<beans:bean id = "methodSecurityExpressionHandler"
        class = "org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
            <beans:property name = "roleHierarchy" ref=""/>
    </beans:bean>-->
    <!--<http use-expressions="true" access-denied-page="/error403" entry-point-ref="loginUrlAuthenticationEntryPoint">-->
    <http pattern="/ems/site/**" security="none"/>
    <http pattern="/ems/service/**" security="none"/>
    <http pattern="/ems/security/login" security="none"/>
    <http pattern="/js/**" security="none"/>
    <http pattern="/img/**" security="none"/>
    <http pattern="/dtd/**" security="none"/>
    <http pattern="/mediateka/**" security="none"/>
    <http pattern="/css/**" security="none"/>
    <http pattern="/ems/resource/**" security="none"/>
    <http pattern="/resource/**" security="none"/>
    <http pattern="/cocoon-ajax-impl/**" security="none"/>
    <http pattern="/cocoon-forms-impl/**" security="none"/>

    <http use-expressions="true" access-denied-page="/ems/security/login"
          entry-point-ref="loginUrlAuthenticationEntryPoint">
        <!--<form-login login-page="/ems/security/login" default-target-url="/ems/core/Content-List" authentication-failure-url="/ems/security/login"/>-->
        <!--<intercept-url pattern="/ems/site/**" filters="none"/>
        <intercept-url pattern="/js/**" filters="none"/>
        <intercept-url pattern="/img/**" filters="none"/>
        <intercept-url pattern="/dtd/**" filters="none"/>
        <intercept-url pattern="/mediateka/**" filters="none"/>
        <intercept-url pattern="/css/**" filters="none"/>
        <intercept-url pattern="/ems/resource/**" filters="none"/>
        <intercept-url pattern="/resource/**" filters="none"/>
        <intercept-url pattern="/cocoon-ajax-impl/**" filters="none"/>
        <intercept-url pattern="/cocoon-forms-impl/**" filters="none"/>-->


        <custom-filter position="FORM_LOGIN_FILTER" ref="emsLoginFilter"/>


        <!--<intercept-url pattern="/pass" access="permitAll"/>-->
        <!--<intercept-url pattern="/changePassword" access="hasRole('ROLE_USER') and fullyAuthenticated"/>-->
        <!--<intercept-url pattern="/my/*" access="hasRole('ROLE_USER')"/>-->
        <!--<form-login login-page="/pass" default-target-url="/my/changePassword" authentication-failure-url="/pass"/>-->


        <!--<intercept-url pattern="/ems/security/login" access="permitAll"/>-->
        <intercept-url pattern="/ems/core/**" access="hasRole('ROLE_USER') or hasRole('ROLE_ADMIN')"/>
        <intercept-url pattern="/ems/security/**" access="hasRole('ROLE_ADMIN')"/>
        <!--<intercept-url pattern="**" access="permitAll"/>-->


        <!--<intercept-url pattern="/ems/core/*-list" access="hasRole('ROLE_USER') and fullyAuthenticated" />-->
        <!--<intercept-url pattern="/ems/core/*-edit" access="hasRole('ROLE_ADMIN')"/>-->
        <!--<intercept-url pattern="/ems/core/*-delete" access="hasRole('ROLE_ADMIN')"/>-->
        <!--<intercept-url pattern="/ems/core/**" access="hasRole('ROLE_ADMIN')" requires-channel="https"/>-->


        <!--<intercept-url pattern="/contract.html" access="hasAnyRole('ROLE_USER')"/>-->

        <!--<intercept-url pattern="/*" access="ROLE_ANONYMOUS"/>-->

        <!--<anonymous enabled="true" username="guest" granted-authority="ROLE_ANONYMOUS"/>-->
        <!--<remember-me key="jdbcPetStore"
                     services-ref="ipTokenBasedRememberMeServicesBean"/>-->
        <logout invalidate-session="true" logout-success-url="/ems/security/login" logout-url="/ems/security/logout"/>
        <!--<session-management />-->
        <!--<session-management invalid-session-url="/ems/security/sessionTimeout">-->

        <!--<session-management invalid-session-url="/" session-fixation-protection="migrateSession">
            <concurrency-control max-sessions="1" error-if-maximum-exceeded="true"/>
        </session-management>-->
        <session-management session-authentication-strategy-ref="sas"/>


        <!--<access-denied-handler error-page="/accessDenied.do"/>-->
        <!--<remember-me />-->
    </http>


    <authentication-manager alias="authenticationManager">
        <authentication-provider user-service-ref="jdbcUserService">
            <password-encoder ref="passwordEncoder">
                <salt-source ref="saltSource"/>
            </password-encoder>
            <!--<authentication-provider>-->
            <!--<password-encoder hash="sha">-->
            <!--<salt-source user-property="username"/>-->
            <!--</password-encoder>-->

            <!--<jdbc-user-service data-source-ref="dataSource"/>-->
            <!--<jdbc-user-service data-source-ref="dataSource" authorities-by-username-query="select username,authority from users where username=?"/>-->
            <!--<user-service
                    id="userService">
                <user name="admin" password="pass" authorities="ROLE_ADMIN,ROLE_USER"/>
                <user name="user1" password="1111" authorities="ROLE_USER"/>
                <user name="user2" password="2222" disabled="true" authorities="ROLE_USER"/>
            </user-service>-->
        </authentication-provider>
    </authentication-manager>


    <beans:bean id="concurrencyFilter"
                class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <beans:property name="sessionRegistry" ref="sessionRegistry"/>
        <beans:property name="expiredUrl" value="/session-expired.htm"/>
    </beans:bean>

    <beans:bean id="myAuthFilter"
                class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
        <beans:property name="sessionAuthenticationStrategy" ref="sas"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

    <beans:bean id="sas"
                class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
        <beans:constructor-arg name="sessionRegistry" ref="sessionRegistry"/>
        <beans:property name="maximumSessions" value="1"/>
    </beans:bean>

    <beans:bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>

    <beans:bean id="jdbcUserService" class="ru.strela.ems.security.CustomJdbcDaoImpl">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="enableGroups" value="true"/>
        <beans:property name="enableAuthorities" value="false"/>
        <beans:property name="usersByUsernameQuery">
            <beans:value>select username,password,enabled,salt from users where username = ?
            </beans:value>
        </beans:property>
    </beans:bean>

    <!-- Automatically receives AuthenticationEvent messages -->


    <!-- ======================== FILTER CHAIN ======================= -->


</beans:beans>
