<?xml version="1.0" encoding="UTF-8"?>
<!--
	Application context definition for PetClinic Datasource.
-->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd">
				
	<!-- ========================= DATASOURCE DEFINITION ========================= -->				

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<context:property-placeholder location="classpath:/META-INF/jdbc.properties"/>

	<!-- DataSource configuration for Apache Commons DBCP. -->
	<!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
			p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
			p:username="${jdbc.username}" p:password="${jdbc.password}"/>
    -->

    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>-->
    <!--WORK-->
    <!--<bean id="dataSource" class="org.hibernate.connection.C3P0ConnectionProvider" destroy-method="close">-->
    <!--<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
    <!--<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!--<property name="driverClassName" value="net.rkbloom.logdriver.LogDriver"/>-->
        <property name="driverClass" value="net.rkbloom.logdriver.LogDriver"/>
        <!--<property name="url" value="jdbc:log:com.mysql.jdbc.Driver:mysql://localhost:3306/new?useUnicode=true&amp;characterEncoding=UTF-8"/>-->
        <property name="jdbcUrl" value="jdbc:log:com.mysql.jdbc.Driver:mysql://localhost:3306/kremnevdb?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <!--<property name="username" value="msl"/>-->
        <property name="user" value="tomcat"/>
        <property name="password" value="nx4MViU3Gg2n"/>
    </bean>


	<!-- JNDI DataSource for JEE environments -->
	<!--<jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/>-->
    <!-- JNDI datasource for hibernate -->
    <!--<bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate">
        <property name="environment">
            <props>
                <prop key="java.naming.factory.initial">com.sun.jndi.fscontext.RefFSContextFactory</prop>
                <prop key="java.naming.provider.url">classpath:/</prop>
            </props>
        </property>
    </bean>
    <bean id="jndiDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate">
          <ref bean="jndiTemplate"/>
        </property>
        <property name="jndiName">
              <value>MYCONNECTIONKEY</value>
        </property>
      </bean>-->
	<!-- Database initializer. If any of the script fails, the initialization stops. -->
	<!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->

	 <!--<jdbc:initialize-database  data-source="dataSource">
        <jdbc:script location="classpath:security-schema.sql"/>
		<jdbc:script location="classpath:security-data.sql"/>
        <jdbc:script location="classpath:ems-schema.sql"/>
		<jdbc:script location="classpath:ems-data.sql"/>
        <jdbc:script location="classpath:ecommerce-schema.sql"/>
        <jdbc:script location="classpath:ecommerce-data.sql"/>

	</jdbc:initialize-database>-->

</beans>